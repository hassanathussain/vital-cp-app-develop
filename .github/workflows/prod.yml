name: Deploy to Prod

on:
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Enter Commit ID to deploy'
        required: true
  push:
    branches:
      - 'release/**'

env:
  resourceGroup1: ${GITHUB_RUN_ID}-${GITHUB_RUN_NUMBER}
  resourceGroup2: ${{ github.run_number }}
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  Build-Image:
    name: Build Image prod
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build.outputs.image }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
       role-to-assume: arn:aws:iam::941612032805:role/github-actions-role
       role-session-name: simplerolesession
       aws-region: ${{ secrets.AWS_REGION_PROD }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build & Push docker image to Amazon ECR
      id: build
      env:
        ECR_REGISTRY: ${{ secrets.ECR_URI }}
        IMAGE_TAG: ${{ env.resourceGroup2 }}
      run: |
        # Build & Push image
        docker build -t $ECR_REGISTRY/vitalcustomerportal:$IMAGE_TAG --target base .
        docker push $ECR_REGISTRY/vitalcustomerportal:$IMAGE_TAG
  Deploy-Prod-us-west-2:
    name: Deploy to Prod us-west-2
    runs-on: ubuntu-latest
    needs: [Build-Image]
    environment:
      name: production-primary
      url: https://portal.sorenson.com

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
       role-to-assume: arn:aws:iam::941612032805:role/github-actions-role
       role-session-name: simplerolesession
       aws-region: ${{ secrets.AWS_REGION_PROD }}

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition-prod-us-west-2.json
        container-name: prod-vital-cp-app
        image: "${{ secrets.ECR_URI }}/vitalcustomerportal:${{ env.resourceGroup2 }}"

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: prod-vital-cp-app
        cluster: prod-vital-cp-app
        wait-for-service-stability: true

  Deploy-Prod-us-east-1:
    name: Deploy to Prod us-east-1
    runs-on: ubuntu-latest
    needs: [Build-Image]
    environment:
      name: production-secondary
      url: https://portal.sorenson.com

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
       role-to-assume: arn:aws:iam::941612032805:role/github-actions-role
       role-session-name: simplerolesession
       aws-region: ${{ secrets.AWS_REGION_PROD_2 }}

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition-prod-us-east-1.json
        container-name: prod-vital-cp-app
        image: "${{ secrets.ECR_URI }}/vitalcustomerportal:${{ env.resourceGroup2 }}"

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: prod-vital-cp-app
        cluster: prod-vital-cp-app
        wait-for-service-stability: true
